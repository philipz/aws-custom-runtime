# Copyright 2018 TriggerMesh, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: build.knative.dev/v1alpha1
kind: BuildTemplate
metadata:
  name: aws-custom-runtime
spec:
  parameters:
  - name: IMAGE
    description: The URI of the image to push, including registry host
  - name: TAG
    description: Tag of the image being pushed
    default: latest
  - name: DIRECTORY
    description: The subdirectory of the workspace/repo
    default: ""
  - name: HANDLER
    default: "function.handler"
  steps:
  - name: dockerfile
    image: gcr.io/kaniko-project/executor@sha256:abf49356a3151a9c85f7a7ed37ec975f7c81dc2a4e3efab2f534e7749d8489d5
    command:
    - /busybox/sh
    args:
    - -c
    - |
      cd /workspace/${DIRECTORY}
      cat <<EOF > Dockerfile
        FROM amazonlinux
        
        RUN LATEST_VERSION=\$(curl -sI https://github.com/triggermesh/aws-custom-runtime/releases/latest | grep "Location:" | awk -F "/" '{print \$NF}' | tr -d "\r" ) \
              && curl -sL https://github.com/triggermesh/aws-custom-runtime/releases/download/\${LATEST_VERSION}/aws-custom-runtime > /opt/aws-custom-runtime \
              && chmod +x /opt/aws-custom-runtime
        
        ENV LAMBDA_TASK_ROOT "/opt"
        ENV _HANDLER "${HANDLER}"
        
        COPY . /opt

        CMD ["/opt/aws-custom-runtime"]
      EOF
  - name: export
    image: gcr.io/kaniko-project/executor@sha256:abf49356a3151a9c85f7a7ed37ec975f7c81dc2a4e3efab2f534e7749d8489d5
    args:
    - --context=/workspace/${DIRECTORY}
    - --dockerfile=/workspace/${DIRECTORY}/Dockerfile
    - --destination=${IMAGE}:${TAG}
